apiVersion: apps/v1
kind: Deployment
metadata:
  name: maiern-server-deployment
  namespace: maiern
spec:
  selector:
    matchLabels:
      name: maiern-server
  template:
    metadata:
      namespace: maiern
      name: maiern
      labels:
        name: maiern-server
    spec:
      containers:
        - name: maiern-server
          image: robertschreib/maiern-server:0.1.2
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              port: http
              path: /health
          readinessProbe:
            httpGet:
              port: http
              path: /health
          ports:
            - containerPort: 3000
              name: http
          resources:
            limits:
              memory: 1Gi
              cpu: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: server-service
spec:
  selector:
    name: maiern-server
  ports:
    - port: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: maiern-server-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/websocket-services : "server-service"
    nginx.ingress.kubernetes.io/rewrite-target: /
    certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/websocket-services : "server-service"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://meiern.k8.schreib.io"
spec:
  rules:
    - host: meiern-api.k8.schreib.io
      http:
        paths:
          - backend:
              serviceName: server-service
              servicePort: 3000
            path: /
  tls:
    - hosts:
        - meiern-api.k8.schreib.io
      secretName: tls-maiern
---
# client
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maiern-client-deployment
  namespace: maiern
spec:
  selector:
    matchLabels:
      name: maiern-client
  template:
    metadata:
      namespace: maiern
      name: maiern-client
      labels:
        name: maiern-client
    spec:
      containers:
        - name: maiern-client
          image: robertschreib/maiern-client:0.1.3
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              port: http
              path: /
          readinessProbe:
            httpGet:
              port: http
              path: /
          ports:
            - containerPort: 80
              name: http
          resources:
            limits:
              memory: 10Mi
              cpu: 100m
---
apiVersion: v1
kind: Service
metadata:
  name: client-service
spec:
  selector:
    name: maiern-client
  ports:
    - port: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: maiern-client-ingress
  annotations:
    certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://meiern-api.k8.schreib.io"
spec:
  rules:
    - host: meiern.k8.schreib.io
      http:
        paths:
          - backend:
              serviceName: client-service
              servicePort: 80
            path: /
  tls:
    - hosts:
        - meiern.k8.schreib.io
      secretName: tls-meiern-client
